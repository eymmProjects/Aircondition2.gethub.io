{
  "name": "aircondition2.gethub.io",
  "version": "1.0.0",
  "description": "User Interface Design &amp; Programming. Using development tool of your choice (desktop/web/mobile), design a computer-controlled climate system for a certain home. The climate system commonly uses knobs and sliders to setup the desired temperature, fans, air control and others.   The interface hardware: Assume you have an 800 x 600 pixel full-color screen (your choice: landscape or portrait mode) Assume the screen is roughly 72 pixels per inch resolution The app takes over the entire screen area (ie there is no menu bar) The screen can be used as a touch screen with a pen or finger This allows you to click or click and drag, but no right-clicking and no other buttons or modifiers (ctrl, shift, alt, etc) You can simulate this with a mouse (but keep in mind the size of a finger) There is no keyboard, or other physical buttons  The User interface: Typical displays (minimum requirements) Show the current time and day of the week (which it can figure out for itself) Show the current inside temperature Show what the system is currently doing Heating / cooling / neither Fan on or off Typical controls (minimum requirements) Set the system to either 'cool' or 'heat' or 'off' 'Cool' the system will try to cool the house 'Heat' the system will try to heat the house 'Off' the system will do nothing Set the fan to 'automatic' or 'on' 'On' the fan is always on 'Automatic' the fan comes on with the heater/air-condition Set the desired temperature, with possibility to pre-warm or cool the house in advance Typically the week is divided into three sections: weekdays / saturday / sunday What time in the morning with desired heating temperature and cooling temperature Ability to select special modes. Ability to select a zone of the house to cool or warm (rooms/kitchen/living room) Ability to temporarily override the current temp setting Giving a new target indoor temperature for the current period Giving a new target indoor temperature for the next n days Giving a new target indoor temperature until told otherwise Add newer features like: Choosing between degrees Celsius and Fahrenheit Showing the current outside temperature Graphs showing indoor/outdoor temperatures Wizard to do the initial settings Security aspects (administrator access)  Write a simulated heater / air conditioner to run in the background: Get real current outside temperature through a program logic every 5 minutes (see sample algorithm, or write your own) Display the current system time as the current time Get the current date and use that as the current day of the week Set the inside temperature initially set to the outside temperature If heater/ air-condition is not on then Temperature tends to outside temp at a rate of 1degree Fahrenheit  per 10 seconds It’s not very realistic but good for a simulation If heater/ air-condition is on then Virtual heater/air conditioner can raise/lower 1 degree Fahrenheit  per 5 seconds towards the target temperature set by user It’s not very realistic but good for a simulation The simulation should update its state once per second, regardless of the speed of the CPU. Deliverable: Functional Prototype",
  "main": "script.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eymmProjects/Aircondition2.gethub.io.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/eymmProjects/Aircondition2.gethub.io/issues"
  },
  "homepage": "https://github.com/eymmProjects/Aircondition2.gethub.io#readme",
  "dependencies": {
    "express": "^4.17.1"
  },
  "devDependencies": {
    "nodemon": "^2.0.6"
  }
}
